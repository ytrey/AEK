//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using DevExpress.Xpo;
using DevExpress.Data.Filtering;
using System.Collections.Generic;
using System.ComponentModel;
namespace DXWebApplication1.DataModel.KUTA_ECA
{

    public partial class turning_angles : main
    {
        string fdirection;
        [Size(SizeAttribute.Unlimited)]
        public string direction
        {
            get { return fdirection; }
            set { SetPropertyValue<string>("direction", ref fdirection, value); }
        }
        decimal fangle_grad;
        public decimal angle_grad
        {
            get { return fangle_grad; }
            set { SetPropertyValue<decimal>("angle_grad", ref fangle_grad, value); }
        }
        decimal fangle_min;
        public decimal angle_min
        {
            get { return fangle_min; }
            set { SetPropertyValue<decimal>("angle_min", ref fangle_min, value); }
        }
        sheets fsheet_id;
        [Indexed(Name = @"isheet_id_turning_angles")]
        [Size(38)]
        [Association(@"turning_anglesReferencessheets")]
        public sheets sheet_id
        {
            get { return fsheet_id; }
            set { SetPropertyValue<sheets>("sheet_id", ref fsheet_id, value); }
        }
        picket fpicket_id;
        [Indexed(Name = @"ipicket_id_turning_angles")]
        [Size(10)]
        [Association(@"turning_anglesReferencespicket")]
        public picket picket_id
        {
            get { return fpicket_id; }
            set { SetPropertyValue<picket>("picket_id", ref fpicket_id, value); }
        }
        decimal fofst;
        public decimal ofst
        {
            get { return fofst; }
            set { SetPropertyValue<decimal>("ofst", ref fofst, value); }
        }
        decimal fexpl_km;
        [Indexed(Name = @"turning_angles_expl_km_idx")]
        public decimal expl_km
        {
            get { return fexpl_km; }
            set { SetPropertyValue<decimal>("expl_km", ref fexpl_km, value); }
        }
        decimal frow_index;
        public decimal row_index
        {
            get { return frow_index; }
            set { SetPropertyValue<decimal>("row_index", ref frow_index, value); }
        }
        string fradius;
        [Size(SizeAttribute.Unlimited)]
        public string radius
        {
            get { return fradius; }
            set { SetPropertyValue<string>("radius", ref fradius, value); }
        }
        string ftype;
        [Size(SizeAttribute.Unlimited)]
        public string type
        {
            get { return ftype; }
            set { SetPropertyValue<string>("type", ref ftype, value); }
        }
        string ftype1;
        public string type1
        {
            get { return ftype1; }
            set { SetPropertyValue<string>("type1", ref ftype1, value); }
        }
        [PersistentAlias("[sheet_id].[file_name]")]
        public string file_name
        {
            get { return (string)(EvaluateAlias("file_name")); }
        }
    }

}
